{"ast":null,"code":"var _jsxFileName = \"/home/aman_ahmed/apps/React/timesheet-react-hu-2020/src/components/TaskList/index.tsx\";\n\n/**\n * @author: Tejas Upmanyu (@tejasupmanyu)\n * TaskList Component - Renders list of task cards of all the tasks entered in timesheet.\n */\nimport * as React from 'react';\nimport './styles.scss';\nimport crossIcon from \"../../assets/cross-icon.svg\";\nimport { storageKey } from '../../constants/constants';\nexport const TaskList = props => {\n  const entries = props.entries;\n  /*\n  const onRemoveCard = (entry:IEntry) => {\n      const existingTasks = window.localStorage.getItem(storageKey);\n      const newTasks = entries.filter(newEntry => (\n          !(newEntry.task==entry.task && newEntry.hours==entry.hours && newEntry.hours==entry.minutes && newEntry.remarks==entry.remarks)\n      ));\n  \n      window.localStorage.setItem(storageKey, JSON.stringify(newTasks));\n  \n  }\n  */\n\n  const onRemoveCard = entry => {\n    const existingTasksString = window.localStorage.getItem(storageKey); //const newEntry : IEntry;\n\n    /*\n    if(existingTasksString){\n    const existingTasks = JSON.parse(existingTasksString);\n    const newTasks = existingTasks.filter(newEntry => (\n        !(newEntry.task==entry.task && newEntry.hours==entry.hours && newEntry.hours==entry.minutes && newEntry.remarks==entry.remarks)\n    ));\n        \n    window.localStorage.setItem(storageKey, JSON.stringify(newTasks));\n    }//if    \n    */\n  };\n\n  return React.createElement(\"div\", {\n    className: \"task-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, entries.map(entry => React.createElement(TaskCard, {\n    entry: entry,\n    onRemove: props.onRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) //{onRemoveCard}\n  ));\n};\n/*<button className=\"close-sheet-btn\" onClick={props.onClose} autoFocus>\n                    <img src={crossIcon} alt=\"close\" className=\"close-icon\" />\n  </button>\n  <button className=\"close-sheet-btn\"  onClick={(entry)=>{entry.stopPropagation();entry.preventDefault();entry.triggerDelete(task, index);}} autoFocus>\n                    <img src={crossIcon} alt=\"close\" className=\"close-icon\" />\n  </button> \n*/\n// changed e to entry in close button onClick\n\nconst TaskCard = props => {\n  const _props$entry = props.entry,\n        task = _props$entry.task,\n        hours = _props$entry.hours,\n        minutes = _props$entry.minutes,\n        remarks = _props$entry.remarks;\n  /*\n  const onRemoveCard: () => {\n      const entry:IEntry = props;\n      \n      props.onRemove(entry);\n  }  \n  onClick={onRemoveCard}\n  */\n\n  return React.createElement(\"div\", {\n    className: \"task-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"close-out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: crossIcon,\n    className: \"close-btn\",\n    alt: \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"task-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"task-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, task), React.createElement(\"div\", {\n    className: \"task-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, `${hours}h ${minutes}m`, \" \")));\n};","map":{"version":3,"sources":["/home/aman_ahmed/apps/React/timesheet-react-hu-2020/src/components/TaskList/index.tsx"],"names":["React","storageKey","TaskList","props","entries","onRemoveCard","entry","existingTasksString","window","localStorage","getItem","map","onRemove","TaskCard","task","hours","minutes","remarks","crossIcon"],"mappings":";;AAAA;;;;AAIA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,eAAP;;AAGA,SAASC,UAAT,QAA2B,2BAA3B;AAoBA,OAAO,MAAMC,QAAkC,GAAIC,KAAD,IAA2B;AAAA,QACjEC,OADiE,GACrDD,KADqD,CACjEC,OADiE;AAEzE;;;;;;;;;;;;AAWA,QAAMC,YAAY,GAAIC,KAAD,IAAkB;AACnC,UAAMC,mBAAmB,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BT,UAA5B,CAA5B,CADmC,CAEnC;;AACA;;;;;;;;;;AAUH,GAbD;;AAgBA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,OAAO,CAACO,GAAR,CAAaL,KAAD,IACT,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAwB,IAAA,QAAQ,EAAEH,KAAK,CAACS,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,CAC2C;AADvD,GADL,CADJ;AAOH,CApCM;AAsCP;;;;;;;AAOA;;AAEA,MAAMC,QAAkC,GAAIV,KAAD,IAA2B;AAAA,uBAG9DA,KAH8D,CAE9DG,KAF8D;AAAA,QAErDQ,IAFqD,gBAErDA,IAFqD;AAAA,QAE/CC,KAF+C,gBAE/CA,KAF+C;AAAA,QAExCC,OAFwC,gBAExCA,OAFwC;AAAA,QAE/BC,OAF+B,gBAE/BA,OAF+B;AAIlE;;;;;;;;;AASA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAEC,SAAV;AAAqB,IAAA,SAAS,EAAC,WAA/B;AAA2C,IAAA,GAAG,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BJ,IAA7B,CADA,EAEA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,GAAEC,KAAM,KAAIC,OAAQ,GAAjD,MAFA,CANJ,CADJ;AAmBH,CAhCD","sourcesContent":["/**\n * @author: Tejas Upmanyu (@tejasupmanyu)\n * TaskList Component - Renders list of task cards of all the tasks entered in timesheet.\n */\nimport * as React from 'react';\nimport './styles.scss';\nimport { IEntry } from '../NewEntrySheet';\nimport crossIcon from '../../assets/cross-icon.svg';\nimport { storageKey } from '../../constants/constants';\n\n\ninterface ITaskListProps {\n    entries: IEntry[];\n    onRemove: (entry : IEntry) => void;\n    /*\n    enables : boolean;\n    onClose: () => {};\n    */\n}\ninterface ITaskCardProps {\n    entry: IEntry;\n    onRemove: (entry : IEntry) => void;\n    /*\n    enable: boolean;\n    onClose: () => {enable:false;};\n    */\n}\n\nexport const TaskList: React.FC<ITaskListProps> = (props: ITaskListProps) => {\n    const { entries } = props;\n    /*\n    const onRemoveCard = (entry:IEntry) => {\n        const existingTasks = window.localStorage.getItem(storageKey);\n        const newTasks = entries.filter(newEntry => (\n            !(newEntry.task==entry.task && newEntry.hours==entry.hours && newEntry.hours==entry.minutes && newEntry.remarks==entry.remarks)\n        ));\n    \n        window.localStorage.setItem(storageKey, JSON.stringify(newTasks));\n    \n    }\n    */\n    const onRemoveCard = (entry:IEntry) => {\n        const existingTasksString = window.localStorage.getItem(storageKey);\n        //const newEntry : IEntry;\n        /*\n        if(existingTasksString){\n        const existingTasks = JSON.parse(existingTasksString);\n        const newTasks = existingTasks.filter(newEntry => (\n            !(newEntry.task==entry.task && newEntry.hours==entry.hours && newEntry.hours==entry.minutes && newEntry.remarks==entry.remarks)\n        ));\n            \n        window.localStorage.setItem(storageKey, JSON.stringify(newTasks));\n        }//if    \n        */\n    }\n\n\n    return (\n        <div className=\"task-list\">\n            {entries.map((entry: IEntry) => (\n                <TaskCard entry={entry} onRemove={props.onRemove}/> //{onRemoveCard}\n            ))}\n        </div>\n    );\n};\n\n/*<button className=\"close-sheet-btn\" onClick={props.onClose} autoFocus>\n                    <img src={crossIcon} alt=\"close\" className=\"close-icon\" />\n  </button>\n  <button className=\"close-sheet-btn\"  onClick={(entry)=>{entry.stopPropagation();entry.preventDefault();entry.triggerDelete(task, index);}} autoFocus>\n                    <img src={crossIcon} alt=\"close\" className=\"close-icon\" />\n  </button> \n*/\n// changed e to entry in close button onClick\n\nconst TaskCard: React.FC<ITaskCardProps> = (props: ITaskCardProps) => {\n    const {\n        entry: { task, hours, minutes, remarks },\n    } = props;\n    /*\n    const onRemoveCard: () => {\n        const entry:IEntry = props;\n        \n        props.onRemove(entry);\n    }  \n    onClick={onRemoveCard}\n    */\n\n    return (\n        <div className=\"task-card\">\n            <div className=\"close-header\">\n            <button className=\"close-out\">\n            <img src={crossIcon} className=\"close-btn\" alt=\"close\" />\n            </button>\n            </div>\n            <div className=\"task-head\">\n            <div className=\"task-title\">{task}</div> \n            <div className=\"task-time\">{`${hours}h ${minutes}m`} </div>\n            </div>\n             \n             {/*\n            <div className=\"remarks\">\n            <p>{remarks}</p>    \n            </div>\n             */}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}