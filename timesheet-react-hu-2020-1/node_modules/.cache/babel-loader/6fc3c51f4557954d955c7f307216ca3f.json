{"ast":null,"code":"import _slicedToArray from\"/home/aman_ahmed/apps/React/timesheet-react-hu-2020/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/**\n * @author: Tejas Upmanyu (@tejasupmanyu)\n * NewEntrySheet Component - Renders action sheet for adding new entry.\n */import*as React from'react';import'./styles.scss';import crossIcon from\"../../assets/cross-icon.svg\";import{Button}from'../Button';import{taskTypes}from'../../constants/constants';export var NewEntrySheet=function NewEntrySheet(props){var _React$useState=React.useState(taskTypes[0]),_React$useState2=_slicedToArray(_React$useState,2),task=_React$useState2[0],setTask=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),hours=_React$useState4[0],setHours=_React$useState4[1];var _React$useState5=React.useState(''),_React$useState6=_slicedToArray(_React$useState5,2),minutes=_React$useState6[0],setMinutes=_React$useState6[1];var _React$useState7=React.useState(''),_React$useState8=_slicedToArray(_React$useState7,2),remarks=_React$useState8[0],setRemarks=_React$useState8[1];//const [enable,setEnable] = React.useState(true);\nvar onTaskChange=function onTaskChange(event){setTask(event.target.value);};var onHoursChange=function onHoursChange(event){setHours(event.target.value);};var onMinutesChange=function onMinutesChange(event){setMinutes(event.target.value);};var onRemarksChange=function onRemarksChange(event){setRemarks(event.target.value);};var onAddEntry=function onAddEntry(){var entry={task:task,hours:hours,minutes:minutes,remarks:remarks};//Set total hours count\nvar hrs=window.localStorage.getItem('hrs');var hrc=hrs?JSON.parse(hrs):[];hrc=hrc+parseInt(hours);window.localStorage.setItem('hrs',hrc);//Set total minutes count\nvar mins=window.localStorage.getItem('mins');var minc=mins?JSON.parse(mins):[];minc=minc+parseInt(minutes);window.localStorage.setItem('mins',minc);//Check to enable button entry\nif(entry.task!=\"\"&&entry.hours!=\"\"&&entry.minutes!=\"\"&&entry.remarks!=\"\")props.onAdd(entry);};return React.createElement(\"div\",{className:\"new-entry-sheet\"},React.createElement(\"div\",{className:\"sheet-header\"},React.createElement(\"div\",{className:\"sheet-title\"},React.createElement(\"span\",{className:\"title\"},\"Add New Entry\")),React.createElement(\"button\",{className:\"close-sheet-btn\",onClick:props.onClose,autoFocus:true},React.createElement(\"img\",{src:crossIcon,alt:\"close\",className:\"close-icon\"}))),React.createElement(\"div\",{className:\"sheet-body\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"label\",{className:\"task-input\"},\"Task Type\",React.createElement(\"select\",{className:\"task-select\",onChange:onTaskChange,value:task},taskTypes.map(function(task){return React.createElement(\"option\",{value:task},task);}))),React.createElement(\"label\",{className:\"time-input\"},\"Time Spent\",React.createElement(\"div\",{className:\"time-input-fields\"},React.createElement(\"div\",null,React.createElement(\"input\",{type:\"number\",placeholder:\"hours\",className:\"hour-input\",onChange:onHoursChange,value:hours}),React.createElement(\"span\",{className:\"time-indicator\"},\"h\")),React.createElement(\"div\",null,React.createElement(\"input\",{type:\"number\",placeholder:\"minutes\",className:\"minute-input\",onChange:onMinutesChange,value:minutes}),React.createElement(\"span\",{className:\"time-indicator\"},\"m\"))))),React.createElement(\"div\",null,React.createElement(\"label\",null,\"Remarks\",React.createElement(\"br\",null),React.createElement(\"input\",{type:\"text\",className:\"remarks-input\",placeholder:\"Remarks\",value:remarks,onChange:onRemarksChange})))),React.createElement(\"div\",{className:\"sheet-footer\"},React.createElement(\"div\",{className:\"action-group\"},React.createElement(Button,{color:\"primary\",onClick:onAddEntry},\"Add Entry\"))));};","map":{"version":3,"sources":["/home/aman_ahmed/apps/React/timesheet-react-hu-2020/src/components/NewEntrySheet/index.tsx"],"names":["React","Button","taskTypes","NewEntrySheet","props","useState","task","setTask","hours","setHours","minutes","setMinutes","remarks","setRemarks","onTaskChange","event","target","value","onHoursChange","onMinutesChange","onRemarksChange","onAddEntry","entry","hrs","window","localStorage","getItem","hrc","JSON","parse","parseInt","setItem","mins","minc","onAdd","onClose","crossIcon","map"],"mappings":"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","sourcesContent":["/**\n * @author: Tejas Upmanyu (@tejasupmanyu)\n * NewEntrySheet Component - Renders action sheet for adding new entry.\n */\nimport * as React from 'react';\nimport './styles.scss';\nimport crossIcon from '../../assets/cross-icon.svg';\nimport { Button } from '../Button';\nimport { taskTypes } from '../../constants/constants';\n\ninterface INewEntrySheet {\n    onClose: () => void;\n    onAdd: (entry: IEntry) => void;\n}\n\nexport interface IEntry {\n    task: string;\n    hours: string;\n    minutes: string;\n    remarks: string;\n    //onDelete: () => void;\n    //onClose: () => void;\n}\n\nexport const NewEntrySheet: React.FC<INewEntrySheet> = (props: INewEntrySheet) => {\n    const [task, setTask] = React.useState(taskTypes[0]);\n    const [hours, setHours] = React.useState('');\n    const [minutes, setMinutes] = React.useState('');\n    const [remarks, setRemarks] = React.useState('');\n    //const [enable,setEnable] = React.useState(true);\n\n    const onTaskChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setTask(event.target.value);\n    };\n\n    const onHoursChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setHours(event.target.value);\n    };\n\n    const onMinutesChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setMinutes(event.target.value);\n    };\n\n    const onRemarksChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRemarks(event.target.value);\n    };\n\n    const onAddEntry = () => {\n        const entry: IEntry = { task, hours, minutes, remarks };\n        //Set total hours count\n        let hrs = window.localStorage.getItem('hrs');\n        let hrc = hrs ? JSON.parse(hrs) : [];\n        hrc = hrc + parseInt(hours);\n        window.localStorage.setItem('hrs',hrc);\n        //Set total minutes count\n        let mins = window.localStorage.getItem('mins');\n        let minc = mins ? JSON.parse(mins) : [];\n        minc = minc + parseInt(minutes);\n        window.localStorage.setItem('mins',minc);\n        //Check to enable button entry\n        if(entry.task!=\"\" && entry.hours!=\"\" && entry.minutes!=\"\" && entry.remarks!=\"\")\n            props.onAdd(entry);\n    };\n\n    return (\n        <div className=\"new-entry-sheet\">\n            <div className=\"sheet-header\">\n                <div className=\"sheet-title\">\n                    <span className=\"title\">Add New Entry</span>\n                </div>\n                <button className=\"close-sheet-btn\" onClick={props.onClose} autoFocus>\n                    <img src={crossIcon} alt=\"close\" className=\"close-icon\" />\n                </button>\n            </div>\n            <div className=\"sheet-body\">\n                <div className=\"row\">\n                    <label className=\"task-input\">\n                        Task Type\n                        <select className=\"task-select\" onChange={onTaskChange} value={task}>\n                            {taskTypes.map((task: string) => (\n                                <option value={task}>{task}</option>\n                            ))}\n                        </select>\n                    </label>\n                    <label className=\"time-input\">\n                        Time Spent\n                        <div className=\"time-input-fields\">\n                            <div>\n                                <input\n                                    type=\"number\"\n                                    placeholder=\"hours\"\n                                    className=\"hour-input\"\n                                    onChange={onHoursChange}\n                                    value={hours}\n                                />\n                                <span className=\"time-indicator\">h</span>\n                            </div>\n                            <div>\n                                <input\n                                    type=\"number\"\n                                    placeholder=\"minutes\"\n                                    className=\"minute-input\"\n                                    onChange={onMinutesChange}\n                                    value={minutes}\n                                />\n                                <span className=\"time-indicator\">m</span>\n                            </div>\n                        </div>    \n                    </label>    \n                </div>\n                <div>\n                    <label>\n                        Remarks\n                        <br></br>\n                        <input type=\"text\" className=\"remarks-input\" placeholder=\"Remarks\" value={remarks} onChange={onRemarksChange}/>            \n                    </label>\n                </div>\n            </div>\n            <div className=\"sheet-footer\">\n                <div className=\"action-group\">\n                    <Button color=\"primary\" onClick={onAddEntry}>\n                        Add Entry\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}