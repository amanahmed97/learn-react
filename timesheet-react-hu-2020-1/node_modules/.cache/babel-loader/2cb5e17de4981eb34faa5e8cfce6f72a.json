{"ast":null,"code":"import _slicedToArray from \"/home/aman_ahmed/apps/React/timesheet-react-hu-2020/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/aman_ahmed/apps/React/timesheet-react-hu-2020/src/App.tsx\";\n\n/**\n * @author: Tejas Upmanyu (@tejasupmanyu)\n * App Component\n */\nimport React from 'react';\nimport './App.scss';\nimport addIcon from \"./assets/plus-icon.svg\";\nimport { NewEntrySheet } from './components/NewEntrySheet';\nimport { TaskList } from './components/TaskList';\nimport { storageKey } from './constants/constants';\n\nconst App = () => {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        isEntrySheetOpen = _React$useState2[0],\n        setIsEntrySheetOpen = _React$useState2[1];\n\n  const openEntrySheet = () => {\n    setIsEntrySheetOpen(true);\n  };\n\n  const closeEntrySheet = () => {\n    setIsEntrySheetOpen(false);\n  };\n\n  const onAddEntry = entry => {\n    const existingTasksString = window.localStorage.getItem(storageKey);\n\n    if (existingTasksString) {\n      const existingTasks = JSON.parse(existingTasksString);\n      const newTasks = [...existingTasks, entry];\n      window.localStorage.setItem(storageKey, JSON.stringify(newTasks));\n    } else {\n      window.localStorage.setItem(storageKey, JSON.stringify([entry]));\n    }\n\n    closeEntrySheet();\n  };\n  /*\n  const onDeleteEntry = (entry : IEntry) => {\n      entry : null;\n  }\n  */\n\n\n  const getTaskEntries = () => {\n    const entriesString = window.localStorage.getItem(storageKey);\n    const entries = entriesString ? JSON.parse(entriesString) : [];\n    return entries;\n  };\n\n  const entries = getTaskEntries(); //calculate the time\n\n  let hrs = window.localStorage.getItem('hrs');\n  let hr = hrs ? JSON.parse(hrs) : [];\n  hr = hr * 60;\n  let mins = window.localStorage.getItem('mins');\n  let min = mins ? JSON.parse(mins) : [];\n  let time = hr * 60 + min;\n  time = time / (8 * 60) * 100;\n  console.log(time);\n  return React.createElement(\"div\", {\n    className: \"app-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"outbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, time < 50 ? React.createElement(\"div\", {\n    className: \"orange-bar\",\n    style: {\n      width: time + '%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"\\xA0\") : time < 100 ? React.createElement(\"div\", {\n    className: \"blue-bar\",\n    style: {\n      width: time + '%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\\xA0\") : React.createElement(\"div\", {\n    className: \"green-bar\",\n    style: {\n      width: time + '%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\\xA0\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Timesheet\"), entries.length > 0 ? React.createElement(TaskList, {\n    entries: entries,\n    onRemove: entries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }) : React.createElement(\"p\", {\n    className: \"empty-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"No entries yet. Add a new entry by clicking the + button.\"), React.createElement(\"button\", {\n    className: \"floating-add-entry-btn\",\n    onClick: openEntrySheet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"add-icon\",\n    src: addIcon,\n    alt: \"add entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), isEntrySheetOpen && React.createElement(NewEntrySheet, {\n    onClose: closeEntrySheet,\n    onAdd: onAddEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/aman_ahmed/apps/React/timesheet-react-hu-2020/src/App.tsx"],"names":["React","NewEntrySheet","TaskList","storageKey","App","useState","isEntrySheetOpen","setIsEntrySheetOpen","openEntrySheet","closeEntrySheet","onAddEntry","entry","existingTasksString","window","localStorage","getItem","existingTasks","JSON","parse","newTasks","setItem","stringify","getTaskEntries","entriesString","entries","hrs","hr","mins","min","time","console","log","width","length","addIcon"],"mappings":"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","sourcesContent":["/**\n * @author: Tejas Upmanyu (@tejasupmanyu)\n * App Component\n */\nimport React from 'react';\nimport './App.scss';\nimport addIcon from './assets/plus-icon.svg';\nimport { NewEntrySheet, IEntry } from './components/NewEntrySheet';\nimport { TaskList } from './components/TaskList';\nimport { storageKey } from './constants/constants';\n\nconst App: React.FC = () => {\n    const [isEntrySheetOpen, setIsEntrySheetOpen] = React.useState(false);\n\n    const openEntrySheet = () => {\n        setIsEntrySheetOpen(true);\n    };\n\n    const closeEntrySheet = () => {\n        setIsEntrySheetOpen(false);\n    };\n\n    const onAddEntry = (entry: IEntry) => {\n        const existingTasksString = window.localStorage.getItem(storageKey);\n        if (existingTasksString) {\n            const existingTasks = JSON.parse(existingTasksString);\n            const newTasks = [...existingTasks, entry];\n            window.localStorage.setItem(storageKey, JSON.stringify(newTasks));\n        } else {\n            window.localStorage.setItem(storageKey, JSON.stringify([entry]));\n        }\n        closeEntrySheet();\n    };\n    /*\n    const onDeleteEntry = (entry : IEntry) => {\n        entry : null;\n    }\n    */\n    const getTaskEntries = () => {\n        const entriesString = window.localStorage.getItem(storageKey);\n        const entries = entriesString ? JSON.parse(entriesString) : [];\n        return entries;\n    };\n\n    const entries = getTaskEntries();\n    \n    //calculate the time\n    let hrs = window.localStorage.getItem('hrs');\n    let hr = hrs ? JSON.parse(hrs) : [];\n    hr = hr * 60;\n    let mins = window.localStorage.getItem('mins');\n    let min = mins ? JSON.parse(mins) : [];\n    let time = hr * 60 + min;\n    time = (time/(8*60)) * 100;\n    console.log(time);\n\n    return (\n        <div className=\"app-container\">\n            { /*\n            <div>\n                <progress className=\"pbar\" max=\"100\" value=\"50\"></progress>\n            </div>\n            <br></br>*/\n            }\n            <div className=\"outbar\">\n                {\n                    time < 50  ? <div className=\"orange-bar\" style={{width:time+'%'}}>&nbsp;</div> : \n                    (time < 100 ? <div className=\"blue-bar\" style={{width:time+'%'}}>&nbsp;</div> :\n                    <div className=\"green-bar\" style={{width:time+'%'}}>&nbsp;</div>) \n                    \n                } \n                    {/* ; */}  \n            </div>\n            \n            <h1>Timesheet</h1>\n            {entries.length > 0 ? (\n                <TaskList entries={entries} onRemove={entries}/> \n            ) : (\n                <p className=\"empty-text\">No entries yet. Add a new entry by clicking the + button.</p>\n            )}\n            <button className=\"floating-add-entry-btn\" onClick={openEntrySheet}>\n                <img className=\"add-icon\" src={addIcon} alt=\"add entry\" />\n            </button>\n            {isEntrySheetOpen && <NewEntrySheet onClose={closeEntrySheet} onAdd={onAddEntry} />}\n        </div>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}