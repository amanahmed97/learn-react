{"ast":null,"code":"var _jsxFileName = \"/home/aman_ahmed/apps/React/hu-2020-vmc/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport ImageCardList from './components/ChooseImage';\nimport { Summary } from './components/Summary'; // import {IPage} from './components/PageDisplay';\n\nimport ChooseInstance from './components/ChooseInstance';\n\n// let build:IBuild = {id:\"\",cost: \"\",name: \"\",version: \"\",instance: \"\",memory: \"\",type: \"\",networks:\"\",securityGroup:\"\"};\n// const [buildstate,setBuildState] = React.useState(build);\n// export const setBuildStater = (ibuild : IBuild) => {\n//   setBuildState(ibuild);\n// }\nconst App = () => {\n  let build = {\n    id: \"\",\n    cost: 0,\n    name: \"\",\n    description: \"\",\n    version: \"\",\n    instance: \"\",\n    core: \"\",\n    memory: \"\",\n    type: \"\",\n    networks: \"\",\n    securityGroup: \"\"\n  };\n  let ibuild = {\n    istate: build\n  };\n  let subnav = 1;\n  const [page, setPage] = React.useState(\"1\");\n  const [buildstate, setBuildState] = React.useState(build);\n  const [subpage, setSubPage] = React.useState(1); // const [subm,setSubm] = React.useState(1);\n  // PageDisplay dpage={page} istate={build} upstate={setBuildStater}\n\n  const setPage1 = () => {\n    setPage(\"1\");\n  };\n\n  const setPage2 = () => {\n    setPage(\"2\");\n  };\n\n  const setPage3 = () => {\n    setPage(\"3\");\n  };\n\n  const setPage4 = () => {\n    setPage(\"4\");\n  };\n\n  const setPage5 = () => {\n    setPage(\"5\");\n  }; // setBuildState(build);\n\n\n  const setBuildStater = ssender => {\n    build = ssender.istate;\n    setBuildState(build); // sender.istate=build;\n  }; // const setSubPager =(in :SPage) =>{\n  //   setSubPage(in.spage);\n  // } \n\n\n  function PageDisplay() {\n    if (page == \"1\") {\n      return ImageCardList(sender);\n    } else if (page == \"2\") {\n      return (// {build.istate=buildstate}\n        // ChooseInstance(sender)\n        // <ChooseInstance dpage={sender.dpage} istate={sender.istate} upstate={sender.upstate}/>\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(ChooseInstance, {\n          dpage: sender.dpage,\n          istate: buildstate,\n          upstate: () => setBuildStater(sender),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }))\n      );\n    } else if (page == \"3\") {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"HI\");\n    } else if (page == \"4\") {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"HI\");\n    } else if (page == \"5\") {\n      return (//  <Summary dpage={bgprops.dpage} istate={bgprops.istate} upstate={bgprops.upstate}/>\n        Summary(buildstate) // <p></p>\n\n      );\n    }\n\n    return null;\n  }\n\n  function PageHeading() {\n    if (page == \"1\") {\n      return React.createElement(\"h1\", {\n        className: \"body-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Choose Image\");\n    } else if (page == \"2\") {\n      return React.createElement(\"h1\", {\n        className: \"body-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Choose Instance Type\");\n    } else if (page == \"3\") {\n      return React.createElement(\"h1\", {\n        className: \"body-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Choose Storage and Network\");\n    } else if (page == \"4\") {\n      return React.createElement(\"h1\", {\n        className: \"body-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Configure Security\");\n    } else if (page == \"5\") {\n      return React.createElement(\"h1\", {\n        className: \"body-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Review and Launch\");\n    }\n\n    return null;\n  }\n\n  ;\n  let sender = {\n    dpage: page,\n    istate: build,\n    upstate: () => {\n      setBuildStater(sender);\n    }\n  }; // buildstate.id =\"7\";\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"HVC\")), React.createElement(\"body\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"inline\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, PageHeading(), React.createElement(\"select\", {\n    placeholder: \"Region\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"us-1\"))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, buildstate.id), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, buildstate.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, buildstate.cost), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, buildstate.core), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, buildstate.memory), React.createElement(\"nav\", {\n    className: \"navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"navbutton\",\n    onClick: setPage1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"1.Choose Image\"), React.createElement(\"button\", {\n    className: \"navbutton\",\n    onClick: setPage2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"2.Choose Instance Type\"), React.createElement(\"button\", {\n    className: \"navbutton\",\n    onClick: setPage3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"3.Choose Storage and Network\"), React.createElement(\"button\", {\n    className: \"navbutton\",\n    onClick: setPage4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"4.Configure Security\"), React.createElement(\"button\", {\n    className: \"navbutton\",\n    onClick: setPage5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"5.Review and Launch\")), PageDisplay()), \" \", React.createElement(\"div\", {\n    className: \"cost-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"cost-card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Cost Estimates\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, buildstate.name), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    className: \"cost-card-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    className: \"dollar-cost\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"$\", buildstate.cost, \"/mo\")))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/aman_ahmed/apps/React/hu-2020-vmc/src/App.tsx"],"names":["React","ImageCardList","Summary","ChooseInstance","App","build","id","cost","name","description","version","instance","core","memory","type","networks","securityGroup","ibuild","istate","subnav","page","setPage","useState","buildstate","setBuildState","subpage","setSubPage","setPage1","setPage2","setPage3","setPage4","setPage5","setBuildStater","ssender","PageDisplay","sender","dpage","PageHeading","upstate","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ImageCardList from './components/ChooseImage';\nimport {Summary} from './components/Summary';\n// import {IPage} from './components/PageDisplay';\nimport {IBuild} from  './components/PageDisplay';\nimport {OBuild} from  './components/PageDisplay';\nimport {Bigprops} from './components/PageDisplay';\nimport ChooseInstance from './components/ChooseInstance';\nimport {SPage} from  './components/PageDisplay';\n\n// let build:IBuild = {id:\"\",cost: \"\",name: \"\",version: \"\",instance: \"\",memory: \"\",type: \"\",networks:\"\",securityGroup:\"\"};\n// const [buildstate,setBuildState] = React.useState(build);\n\n// export const setBuildStater = (ibuild : IBuild) => {\n//   setBuildState(ibuild);\n// }\n\nconst App = () => {\n  \n\n  let build:IBuild = {id:\"\",cost: 0,name: \"\",description:\"\",version: \"\",instance: \"\",core:\"\",memory: \"\",type: \"\",networks:\"\",securityGroup:\"\"};\n  let ibuild:OBuild = {istate:build};\n  let subnav=1;\n  \n  const [page,setPage] = React.useState(\"1\");\n  const [buildstate,setBuildState] = React.useState(build);\n  const [subpage,setSubPage] = React.useState(1);\n  // const [subm,setSubm] = React.useState(1);\n  \n\n  // PageDisplay dpage={page} istate={build} upstate={setBuildStater}\n\n\n  const setPage1 = () => {\n    setPage(\"1\");\n  }\n  const setPage2 = () => {\n    setPage(\"2\");\n  }\n  const setPage3 = () => {\n    setPage(\"3\");\n  }\n  const setPage4 = () => {\n    setPage(\"4\");\n  }\n  const setPage5 = () => {\n    setPage(\"5\");\n  }\n\n  // setBuildState(build);\n\n  const setBuildStater = (ssender:Bigprops) => {\n    build=ssender.istate;\n    setBuildState(build);\n    // sender.istate=build;\n  }\n\n  // const setSubPager =(in :SPage) =>{\n  //   setSubPage(in.spage);\n    \n  // } \n  \n  function PageDisplay(){\n    \n    if(page==\"1\"){\n      return(\n          ImageCardList(sender)\n      );\n      }else if(page==\"2\"){\n      return(\n          // {build.istate=buildstate}\n          // ChooseInstance(sender)\n          // <ChooseInstance dpage={sender.dpage} istate={sender.istate} upstate={sender.upstate}/>\n          <div>\n            {/* {sender.istate=buildstate} */}\n          <ChooseInstance dpage={sender.dpage} istate={buildstate} upstate={() => setBuildStater(sender)}/>\n          </div>\n      );\n      }else if(page==\"3\"){\n      return(\n          <h1>HI</h1>\n      );\n      }else if(page==\"4\"){\n      return(\n          <h1>HI</h1>\n      );\n      }else if(page==\"5\"){\n      return(\n          //  <Summary dpage={bgprops.dpage} istate={bgprops.istate} upstate={bgprops.upstate}/>\n           Summary(buildstate)\n          // <p></p>\n      );\n  \n      }\n  \n      return null;\n  }\n\n  function PageHeading()  {   \n        if(page==\"1\"){return(<h1 className=\"body-title\">Choose Image</h1>);\n        }else if(page==\"2\"){return(<h1 className=\"body-title\">Choose Instance Type</h1>);\n        }else if(page==\"3\"){return(<h1 className=\"body-title\">Choose Storage and Network</h1>);\n        }else if(page==\"4\"){return(<h1 className=\"body-title\">Configure Security</h1>);\n        }else if(page==\"5\"){return(<h1 className=\"body-title\">Review and Launch</h1>);  \n        }\n        return null;\n  };\n\n  let sender : Bigprops = { dpage:page,istate:build,upstate:()=>{setBuildStater(sender)}};\n  // buildstate.id =\"7\";\n\n  return (\n    <div className=\"App\">\n      <main>\n      \n      <header className=\"App-header\">\n        <h3>HVC</h3>        \n      </header>\n      \n      <body>\n        \n        {/* Main content */}\n        <div className=\"content\">\n          \n          <div style={{display:\"inline\"}}>\n          {/* <h1 className=\"body-title\">Choose Image</h1> */}\n          {PageHeading()}\n          <select placeholder=\"Region\">\n            <option>us-1</option>\n          </select>\n          </div>\n          \n          <p>{buildstate.id}</p>\n          <p>{buildstate.name}</p>\n          <p>{buildstate.cost}</p>\n          <p>{buildstate.core}</p>\n          <p>{buildstate.memory}</p>\n\n          <nav className=\"navbar\">\n            <button className=\"navbutton\" onClick={setPage1}>1.Choose Image</button>\n            <button className=\"navbutton\" onClick={setPage2}>2.Choose Instance Type</button>\n            <button className=\"navbutton\" onClick={setPage3}>3.Choose Storage and Network</button>\n            <button className=\"navbutton\" onClick={setPage4}>4.Configure Security</button>\n            <button className=\"navbutton\" onClick={setPage5}>5.Review and Launch</button>\n          </nav>  \n          \n          {/* <PageDisplay dpage={page} istate={build} upstate={setBuildStater}/> */}\n          {/* <PageDisplay dpage={page} istate={buildstate}/> */}\n          {PageDisplay()}\n          {/* {page==\"2\" && <ChooseInstance> */}\n\n        </div> {/*Main content*/}\n        \n        {/*Cost card*/}\n        <div className=\"cost-card\">\n          <h2 className=\"cost-card-header\">Cost Estimates</h2>\n          {/*details*/ }\n          <p>{buildstate.name}</p>\n          <br></br>\n          <hr className=\"cost-card-line\"></hr>\n          <h2 className=\"dollar-cost\">${buildstate.cost}/mo</h2>\n        </div>{/*Cost card*/} \n\n\n      </body>{/*body*/}\n      \n      </main>\n      \n      {/* <h1>HI</h1> */}\n      \n    </div> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}